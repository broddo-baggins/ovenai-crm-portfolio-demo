{
  "name": "vite_react_shadcn_ts",
  "private": true,
  "version": "1.0.2",
  "type": "module",
  "comment": "Build v1.0.2EA - Enhanced Mobile Navigation + Queue Management + Analytics Cleanup",
  "scripts": {
    "backup:create": "node scripts/emergency-backup/backup-cycler.cjs create",
    "backup:cycle": "node scripts/emergency-backup/backup-cycler.cjs cycle",
    "backup:status": "node scripts/emergency-backup/backup-cycler.cjs status",
    "backup:cleanup": "node scripts/emergency-backup/backup-cycler.cjs cleanup",
    "backup:emergency": "node scripts/emergency-backup/create-comprehensive-backup.cjs",
    "dev": "VITE_DEMO_MODE=true vite",
    "build": "VITE_DEMO_MODE=true vite build",
    "build:demo": "VITE_DEMO_MODE=true vite build",
    "build:dev": "node scripts/core/validate-env.js --env=development && vite build --mode development",
    "build:prod": "node scripts/core/validate-env.js --env=production && npm run test:non-blocking && npm run build:clean",
    "build:clean": "vite build --mode production --logLevel warn",
    "test:non-blocking": "bash scripts/core/production-test.sh",
    "test:silent": "vitest run --reporter=json --silent",
    "test:production": "npm run type-check && npm run test:dependency-safety && npm run test:react-safety && vitest run --reporter=json --silent --exclude=\"tests/integration/**\" --exclude=\"tests/e2e/**\" --exclude=\"tests/unit/preemptive-doa-detection.test.ts\" && npm run test:build-safety",
    "build:preview": "node scripts/core/validate-env.js --env=preview && vite build --mode preview",
    "build:production": "npm run build:prod",
    "build:development": "npm run build:dev",
    "validate-env": "node scripts/core/validate-env.js",
    "validate-env:template": "node scripts/core/validate-env.js --generate-template",
    "debug-env": "node debug-vercel-env.js",
    "health-check": "node scripts/core/health-check.js",
    "prepare-deploy": "npm run react-context-check && npm run lint && node scripts/core/validate-env.js --env=production && npm run build:prod",
    "deploy-analytics": "node scripts/core/deploy-analytics-fix.js",
    "react-context-check": "node scripts/core/react-context-monitor.js",
    "deploy:quick": "./scripts/quick-deploy.sh",
    "deploy:urgent": "git add . && git commit -m 'URGENT DEPLOY' --no-verify && git push origin main --no-verify",
    "test:quick": "playwright test quality-validation/tests/sanity/basic-functionality.spec.ts --workers=1 --timeout=30000",
    "test:skip-slow": "playwright test --ignore='**/comprehensive-page-coverage.spec.ts' --ignore='**/admin-console-sanity.spec.ts' --timeout=30000",
    "context-monitor": "npm run react-context-check",
    "pre-deploy": "npm run react-context-check && npm run build:prod",
    "safe-deploy": "npm run pre-deploy && echo '‚úÖ Safe to deploy - all checks passed'",
    "pre-push-check": "bash .husky/pre-push",
    "quick-check": "node scripts/core/quick-check.js",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:check": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0 --fix",
    "type-check": "tsc --noEmit",
    "jsx-check": "npm run lint && npm run type-check && npm run build --silent",
    "pre-commit": "lint-staged",
    "validate-jsx": "npm run jsx-check",
    "jsx-validator": "node scripts/core/jsx-validator.js",
    "jsx-validator:file": "node scripts/core/jsx-validator.js file",
    "preview": "vite preview",
    "test": "vitest run --reporter=verbose",
    "test:run": "node scripts/testing/test-tracker.cjs unit \"vitest run\"",
    "test:unit": "node scripts/testing/test-tracker.cjs unit \"vitest run --reporter=verbose\"",
    "test:sanity": "npx playwright test quality-validation/tests/sanity/ --config=quality-validation/configs/playwright.config.ts --reporter=list",
    "test:unit-with-doa": "npm run test:unit-full && npm run test:build-safety && npm run test:sanity && npm run test:e2e-doa",
    "test:unit-full": "npm run test:preemptive-doa && npm run test:dependency-safety && npm run test:react-safety && npm run test:unit",
    "test:preemptive-doa": "npx vitest run tests/unit/preemptive-doa-detection.test.ts",
    "test:production-mirror": "bash scripts/testing/local-production-mirror.sh",
    "test:coverage": "node scripts/testing/test-tracker.cjs unit \"vitest run --coverage\"",
    "test:rtl": "node scripts/testing/test-tracker.cjs unit \"vitest run src/test/rtl-automation.test.tsx\"",
    "test:messages": "node scripts/testing/test-tracker.cjs unit \"vitest run src/test/Messages.test.tsx\"",
    "test:watch": "vitest",
    "test:e2e-pages": "node scripts/testing/test-tracker.cjs e2e \"npx playwright test tests/e2e/all-pages-comprehensive.spec.ts --grep 'should load and verify.*page'\"",
    "test:e2e-working": "node scripts/testing/test-tracker.cjs e2e \"npx playwright test tests/e2e/simple-sidebar-test.spec.ts tests/e2e/all-pages-comprehensive.spec.ts --grep 'should load and verify.*page|Simple Sidebar Test'\"",
    "test:accessibility": "node scripts/testing/test-tracker.cjs accessibility \"vitest run --reporter=verbose --grep=\\\"Accessibility\\\"\"",
    "test:dark-mode": "node scripts/testing/test-tracker.cjs unit \"vitest run --reporter=verbose --grep=\\\"Dark Mode\\\"\"",
    "test:translations": "node scripts/testing/test-tracker.cjs unit \"vitest run --reporter=verbose --grep=\\\"Translation\\\"\"",
    "test:comprehensive": "npm run test:rtl && npm run test:messages && npm run test:coverage && npm run test:e2e",
    "test:doa-prevention": "npm run test:react-safety && npm run test:dependency-safety && npm run test:build-safety && npm run test:e2e-doa",
    "test:react-safety": "node scripts/testing/test-tracker.cjs unit \"vitest run src/test/react-api-safety.test.tsx\"",
    "test:dependency-safety": "node scripts/testing/test-tracker.cjs unit \"vitest run tests/regression/react-dependency-safety.test.ts\"",
    "test:build-safety": "node scripts/testing/test-tracker.cjs unit \"vitest run tests/build/production-build-safety.test.ts\"",
    "test:e2e-doa": "node scripts/testing/test-tracker.cjs e2e \"npx playwright test tests/suites/e2e/errors/doa-prevention.spec.ts\"",
    "test:doa-quick": "npm run test:dependency-safety && npm run test:react-safety",
    "test:summary": "node scripts/testing/test-tracker.cjs summary",
    "test:track": "node scripts/testing/test-tracker.cjs run",
    "test:debug": "playwright test --debug",
    "validate-design-system": "npm run test:rtl && npm run test:accessibility && npm run test:dark-mode && npm run test:translations",
    "generate-design-report": "node scripts/testing/generate-design-system-report.cjs",
    "analyze": "npx vite-bundle-analyzer dist",
    "build:check": "npm run validate-env && vite build --mode development",
    "prepare": "husky install || true",
    "clean-logs": "node scripts/core/clean-debug-logs.js",
    "security-check": "npm audit --audit-level moderate",
    "security:scan-history": "bash scripts/security/scan-git-history.sh",
    "security:scan-secrets": "npm run security:scan-history",
    "security:audit": "npm run security-check && npm run security:scan-history",
    "security:full-audit": "echo 'üîç Running comprehensive security audit...' && npm run security:audit && npm run lint:check",
    "regression-test": "npm run test:all && npm run security-check",
    "test:all": "npm run test:unit && npm run test:e2e",
    "test:local-ci": "npm run lint:check && npm run type-check && npm run test:unit-with-doa",
    "test:github-actions": "npm run type-check && npm run test:local-ci && npm run security-check",
    "test:production-build": "npm run clean-logs && npm run lint:check && npm run type-check && npm run build",
    "emergency-deploy-check": "npm run type-check && npm run test:unit-with-doa && npm run test:production-build && echo \"‚úÖ Ready for emergency deployment\"",
    "build:production-safe": "npm run validate-env --silent && npm run clean-logs && vite build",
    "build:with-types": "npm run validate-env --silent && npm run lint:check && npm run type-check && tsc && vite build",
    "landing:setup": "./scripts/core/landing-page-setup.sh",
    "build:safe": "npm run validate-env --silent && npm run clean-logs && vite build --mode production",
    "tsc:lenient": "npx tsc --noEmit --skipLibCheck --maxNodeModuleJsDepth 0",
    "test:mobile-headed": "playwright test --config=quality-validation/configs/playwright.mobile.config.ts --headed",
    "test:mobile-debug": "playwright test --config=quality-validation/configs/playwright.mobile.config.ts --debug",
    "test:admin:headed": "playwright test --config=quality-validation/configs/playwright.config.admin.ts --headed",
    "test:admin:debug": "playwright test --config=quality-validation/configs/playwright.config.admin.ts --debug",
    "test:regression:priority1": "node scripts/testing/run-regression-suite.cjs --priority=1",
    "test:regression:priority2": "node scripts/testing/run-regression-suite.cjs --priority=2",
    "test:regression:fail-fast": "node scripts/testing/run-regression-suite.cjs --fail-fast",
    "test:health": "npm run test:unit && npm run test:smoke",
    "test:critical": "node scripts/testing/run-regression-suite.cjs --priority=1",
    "test:ea-verification": "node scripts/testing/ea-verification.cjs",
    "test:e2e:all": "node scripts/testing/run-regression-suite.cjs --type=e2e",
    "test:unit:components": "vitest run tests/suites/unit/components/ --pool=threads --poolOptions.threads.maxThreads=4",
    "test:unit:services": "vitest run tests/suites/unit/services/ --pool=threads --poolOptions.threads.maxThreads=4",
    "test:unit:utils": "vitest run tests/suites/unit/utils/ --pool=threads --poolOptions.threads.maxThreads=4",
    "test:unit:hooks": "vitest run tests/suites/unit/hooks/ --pool=threads --poolOptions.threads.maxThreads=4",
    "test:unit:all": "node scripts/testing/run-regression-suite.cjs --type=unit",
    "test:integration:api": "playwright test tests/suites/integration/api/ --workers=3",
    "test:integration:database": "playwright test tests/suites/integration/database/ --workers=3",
    "test:integration:external": "playwright test tests/suites/integration/external/ --workers=3",
    "test:integration:all": "node scripts/testing/run-regression-suite.cjs --type=integration",
    "test:mobile:responsive": "playwright test tests/suites/mobile/responsive/ --workers=2",
    "test:mobile:touch": "playwright test tests/suites/mobile/touch/ --workers=2",
    "test:mobile:orientation": "playwright test tests/suites/mobile/orientation/ --workers=2",
    "test:mobile:performance": "playwright test tests/suites/mobile/performance/ --workers=2",
    "test:mobile:all": "node scripts/testing/run-regression-suite.cjs --type=mobile",
    "test:security:auth": "playwright test tests/suites/security/authentication/ --workers=2",
    "test:security:authz": "playwright test tests/suites/security/authorization/ --workers=2",
    "test:security:data": "playwright test tests/suites/security/data-protection/ --workers=2",
    "test:security:penetration": "playwright test tests/suites/security/penetration/ --workers=2",
    "test:security:all": "node scripts/testing/run-regression-suite.cjs --type=security",
    "test:accessibility:wcag": "playwright test tests/suites/accessibility/wcag/ --workers=1",
    "test:accessibility:i18n": "playwright test tests/suites/accessibility/i18n/ --workers=1",
    "test:accessibility:all": "node scripts/testing/run-regression-suite.cjs --type=accessibility",
    "test:performance:load": "playwright test tests/suites/performance/load/ --workers=2",
    "test:performance:stress": "playwright test tests/suites/performance/stress/ --workers=2",
    "test:performance:optimization": "playwright test tests/suites/performance/optimization/ --workers=2",
    "test:performance:all": "node scripts/testing/run-regression-suite.cjs --type=performance",
    "results:latest": "node tests/results/test-results-tracker.cjs latest",
    "results:history": "node tests/results/test-results-tracker.cjs history",
    "results:compare": "node tests/results/test-results-tracker.cjs compare",
    "results:trends": "node tests/results/test-results-tracker.cjs trends",
    "results:export": "node tests/results/test-results-tracker.cjs export",
    "results:coverage": "npm run test:unit:all -- --coverage && npm run test:e2e:all -- --coverage",
    "env:setup": "node scripts/env/setup-test-env.js",
    "env:health-check": "node scripts/env/validate-test-env.js",
    "test:migrate": "node scripts/testing/migrate-test-files.cjs",
    "test:validate-migration": "node scripts/testing/migrate-test-files.cjs --dry-run",
    "test:help": "echo 'Run npm run test:health for quick validation, npm run test:regression for full suite'",
    "test:validate-configs": "cd quality-validation/configs && node validate-configs.cjs",
    "setup:env": "bash scripts/create-env-local.sh",
    "verify:integration": "node scripts/testing/verify-integration-fixes.cjs",
    "test:complete": "npm run type-check && npm run test:unit && npm run test:e2e",
    "test:ci": "npm run type-check && npm run lint:check && npm run test:production",
    "test:pre-deploy": "npm run type-check && npm run test:doa-prevention",
    "build:safe-deploy": "npm run type-check && npm run lint:check && npm run build:clean",
    "test:health-with-types": "npm run type-check && npm run test:health",
    "validate-all": "npm run type-check && npm run lint:check && npm run test:unit",
    "deploy-ready": "npm run type-check && npm run test:complete && npm run build:safe-deploy",
    "typescript:audit": "node scripts/fixes/typescript-progressive-enhancement-audit.cjs",
    "typescript:fix-safe": "node scripts/fixes/remove-safe-ts-nocheck.cjs",
    "typescript:progress": "cat typescript-progress.json 2>/dev/null || echo 'Run typescript:audit first'"
  },
  "dependencies": {
    "@chatscope/chat-ui-kit-react": "^2.1.1",
    "@chatscope/chat-ui-kit-styles": "^1.4.0",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/modifiers": "^9.0.0",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@fontsource/rubik": "^5.2.6",
    "@google/generative-ai": "^0.24.1",
    "@hookform/resolvers": "^3.10.0",
    "@llamaindex/chat-ui": "^0.5.12",
    "@microsoft/clarity": "^1.0.0",
    "@pdfme/common": "^5.4.2",
    "@pdfme/generator": "^5.4.1",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-aspect-ratio": "^1.1.0",
    "@radix-ui/react-avatar": "^1.1.0",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-collapsible": "^1.1.0",
    "@radix-ui/react-context-menu": "^2.2.15",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-hover-card": "^1.1.1",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.0",
    "@radix-ui/react-menubar": "^1.1.15",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-popover": "^1.1.1",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.2.0",
    "@radix-ui/react-scroll-area": "^1.1.0",
    "@radix-ui/react-select": "^2.1.1",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.1.0",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-toggle": "^1.1.0",
    "@radix-ui/react-toggle-group": "^1.1.10",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@supabase/ssr": "^0.6.1",
    "@supabase/supabase-js": "^2.52.0",
    "@tanstack/react-query": "^5.81.2",
    "@tanstack/react-router": "^1.121.2",
    "@tanstack/react-table": "^8.21.3",
    "@types/lodash": "^4.17.19",
    "@types/lodash-es": "^4.17.12",
    "@types/papaparse": "^5.3.16",
    "@types/react-grid-layout": "^1.3.5",
    "@types/ws": "^8.18.1",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "axios": "^1.9.0",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "daisyui": "^5.0.46",
    "date-fns": "^3.6.0",
    "dotenv": "^16.5.0",
    "embla-carousel-react": "^8.3.0",
    "exceljs": "^4.4.0",
    "flowbite-react": "^0.10.2",
    "framer-motion": "^12.16.0",
    "i18next": "^25.2.1",
    "i18next-browser-languagedetector": "^8.2.0",
    "i18next-http-backend": "^3.0.2",
    "input-otp": "^1.2.4",
    "lodash": "^4.17.21",
    "lodash-es": "^4.17.21",
    "lucide-react": "^0.462.0",
    "mermaid": "^11.8.1",
    "moment": "^2.30.1",
    "next-themes": "^0.3.0",
    "papaparse": "^5.5.3",
    "pg": "^8.16.3",
    "react": "^18.3.1",
    "react-big-calendar": "^1.19.2",
    "react-countup": "^6.5.3",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.3.1",
    "react-error-boundary": "^6.0.0",
    "react-grid-layout": "^1.5.1",
    "react-helmet-async": "^1.3.0",
    "react-hook-form": "^7.60.0",
    "react-i18next": "^15.5.2",
    "react-icons": "^5.5.0",
    "react-intersection-observer": "^9.16.0",
    "react-resizable-panels": "^2.1.3",
    "react-router-dom": "^6.26.2",
    "recharts": "^2.15.4",
    "sonner": "^1.7.4",
    "stream-chat": "^9.10.0",
    "stream-chat-react": "^13.2.1",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^0.9.9",
    "vercel": "^44.5.0",
    "ws": "^8.18.2",
    "zod": "^3.25.76",
    "zustand": "^5.0.4"
  },
  "devDependencies": {
    "@eslint/js": "^9.29.0",
    "@playwright/test": "^1.52.0",
    "@tailwindcss/typography": "^0.4.1",
    "@tanstack/react-query-devtools": "^5.80.10",
    "@testing-library/dom": "^10.4.0",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "^22.5.5",
    "@types/puppeteer": "^5.4.7",
    "@types/react": "^18.3.3",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitejs/plugin-react-swc": "^3.5.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.2",
    "allure-playwright": "^3.3.1",
    "autoprefixer": "^10.4.20",
    "axe-core": "^4.10.3",
    "eslint": "^9.29.0",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.9",
    "glob": "^11.0.2",
    "globals": "^15.9.0",
    "husky": "^9.1.7",
    "jest-axe": "^10.0.0",
    "jsdom": "^26.1.0",
    "node-fetch": "^2.7.0",
    "postcss": "^8.4.47",
    "prettier": "^3.6.2",
    "puppeteer": "^24.12.1",
    "sharp": "^0.34.2",
    "tailwindcss": "^3.4.11",
    "terser": "^5.43.1",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.34.1",
    "vite": "^6.3.5",
    "vitest": "^3.2.4",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "overrides": {
    "esbuild": "^0.25.4",
    "path-to-regexp": "^8.2.0",
    "undici": "^7.11.0"
  },
  "resolutions": {
    "lodash": "lodash-es"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{js,jsx,ts,tsx,json,css,md}": [
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run type-check",
      "pre-push": "npm run test:all"
    }
  }
}
