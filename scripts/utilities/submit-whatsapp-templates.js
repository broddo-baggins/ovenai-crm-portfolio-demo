#!/usr/bin/env node

/**
 * WhatsApp Business Template Submission Script
 * Use this to submit your templates to Meta for approval
 *
 * Usage: node scripts/submit-whatsapp-templates.js
 */

import fetch from 'node-fetch';
import dotenv from 'dotenv';
dotenv.config();

// Your Hebrew Meta-ready templates for Eliana from Qeta
const META_SUBMISSION_TEMPLATES = {
  ELIANA_QETA_INITIAL_CONTACT: {
    name: "eliana_qeta_initial_contact",
    category: "MARKETING",
    language: "he",
    components: [
      {
        type: "BODY",
        text: "◊î◊ô◊ô {{1}}, ◊ñ◊ï ◊ê◊ú◊ô◊ê◊†◊î ◊û◊ß◊ò◊î\n◊®◊¶◊ô◊™◊ô ◊ú◊ë◊ì◊ï◊ß ◊ê◊ù ◊ñ◊î ◊ñ◊û◊ü ◊†◊ï◊ó ◊ú◊©◊ô◊ó◊î ◊ß◊¶◊®◊î?",
        example: {
          body_text: [["◊ô◊ï◊°◊ô"]],
        },
      },
    ],
  },

  ELIANA_QETA_PREVIOUS_CONVERSATION: {
    name: "eliana_qeta_previous_conversation",
    category: "MARKETING",
    language: "he",
    components: [
      {
        type: "BODY",
        text: "◊î◊ô◊ô {{1}}, ◊ñ◊ï ◊ê◊ú◊ô◊ê◊†◊î ◊û◊ß◊ò◊î\n◊û◊ß◊ï◊ï◊î ◊©◊ê◊™◊î ◊ñ◊ï◊õ◊® ◊ê◊ï◊™◊ô ◊û◊î◊©◊ô◊ó◊î ◊î◊ß◊ï◊ì◊û◊™ ◊©◊ú◊†◊ï :)",
        example: {
          body_text: [["◊ì◊ï◊ì"]],
        },
      },
    ],
  },

  ELIANA_QETA_IMMEDIATE_OCCUPANCY: {
    name: "eliana_qeta_immediate_occupancy",
    category: "MARKETING",
    language: "he",
    components: [
      {
        type: "BODY",
        text: "◊î◊ô◊ô {{1}}, ◊ñ◊ï ◊ê◊ú◊ô◊ê◊†◊î ◊û◊ß◊ò◊î\n◊õ◊§◊ô ◊©◊î◊ë◊ò◊ó◊™◊ô ◊ê◊†◊ô ◊õ◊ê◊ü ◊õ◊ì◊ô ◊ú◊¢◊ì◊õ◊ü ◊ë◊î◊ò◊ë◊ï◊™ ◊î◊†◊ï◊õ◊ó◊ô◊ï◊™,\n◊ê◊õ◊ú◊ï◊° ◊û◊ô◊ô◊ì◊ô ◊ï◊™◊©◊ú◊ï◊ù ◊î◊ô◊™◊®◊î ◊ë◊¢◊ï◊ì ◊©◊†◊î, ◊®◊ï◊¶◊î ◊ú◊©◊û◊ï◊¢ ◊§◊®◊ò◊ô◊ù ◊†◊ï◊°◊§◊ô◊ù?",
        example: {
          body_text: [["◊û◊ô◊õ◊ú"]],
        },
      },
    ],
  },

  ELIANA_QETA_PAYMENT_RESET: {
    name: "eliana_qeta_payment_reset",
    category: "MARKETING",
    language: "he",
    components: [
      {
        type: "BODY",
        text: "◊î◊ô◊ô {{1}}, ◊ñ◊ï ◊ê◊ú◊ô◊ê◊†◊î ◊û◊ß◊ò◊î\n◊®◊¶◊ô◊™◊ô ◊ú◊©◊™◊£ ◊ê◊ï◊™◊ö ◊ë◊î◊¶◊¢◊î ◊ó◊ì◊©◊î, ◊ê◊§◊©◊®◊ï◊™ ◊ú◊ê◊ô◊§◊ï◊° ◊™◊©◊ú◊ï◊ù ◊ú◊©◊†◊î ◊î◊ß◊®◊ï◊ë◊î, ◊û◊¢◊ï◊†◊ô◊ô◊ü ◊ú◊©◊û◊ï◊¢ ◊¢◊ï◊ì?",
        example: {
          body_text: [["◊ê◊ë◊ô"]],
        },
      },
    ],
  },

  ELIANA_QETA_PAST_INTEREST: {
    name: "eliana_qeta_past_interest",
    category: "MARKETING",
    language: "he",
    components: [
      {
        type: "BODY",
        text: "◊î◊ô◊ô {{1}}, ◊ñ◊ï ◊ê◊ú◊ô◊ê◊†◊î ◊û◊ß◊ò◊î\n◊®◊ê◊ô◊™◊ô ◊©◊î◊™◊¢◊†◊ô◊ô◊†◊™ ◊ë◊¢◊ë◊® ◊ë◊§◊®◊ï◊ô◊ß◊ò ◊©◊ú◊†◊ï, ◊†◊©◊û◊ó ◊ú◊©◊™◊£ ◊ê◊ï◊™◊ö ◊ë◊¢◊ì◊õ◊ï◊ü ◊ó◊©◊ï◊ë ◊ï◊ë◊î◊¶◊¢◊î ◊û◊ï◊™◊ê◊û◊™ ◊¢◊ë◊ï◊®◊ö, ◊®◊ï◊¶◊î ◊ú◊©◊û◊ï◊¢ ◊¢◊ï◊ì?",
        example: {
          body_text: [["◊®◊ï◊†◊ô◊™"]],
        },
      },
    ],
  },

  ELIANA_QETA_WEEKLY_OFFER_KAPLAN: {
    name: "eliana_qeta_weekly_offer_kaplan",
    category: "MARKETING",
    language: "he",
    components: [
      {
        type: "BODY",
        text: "◊î◊ô◊ô {{1}}, ◊ñ◊ï ◊ê◊ú◊ô◊ê◊†◊î ◊û◊ß◊ò◊î\n◊®◊¶◊ô◊™◊ô ◊ú◊¢◊ì◊õ◊ü ◊ê◊ï◊™◊ö ◊©◊ô◊© ◊ú◊†◊ï ◊î◊¶◊¢◊î ◊ñ◊û◊ô◊†◊î ◊î◊©◊ë◊ï◊¢, ◊û◊¢◊†◊ô◊ô◊ü ◊ê◊ï◊™◊ö ◊ú◊©◊û◊ï◊¢ ◊¢◊ú ◊§◊®◊ò◊ô ◊î◊§◊®◊ï◊ô◊ß◊ò ◊ë◊ß◊§◊ú◊ü",
        example: {
          body_text: [["◊©◊®◊ï◊ü"]],
        },
      },
    ],
  },

  ELIANA_QETA_IMMEDIATE_OCCUPANCY_ALT: {
    name: "eliana_qeta_immediate_occupancy_alt",
    category: "MARKETING",
    language: "he",
    components: [
      {
        type: "BODY",
        text: "◊î◊ô◊ô {{1}}, ◊ñ◊ï ◊ê◊ú◊ô◊ê◊†◊î ◊û◊ß◊ò◊î\n◊®◊¶◊ô◊™◊ô ◊ú◊¢◊ì◊õ◊ü ◊ê◊ï◊™◊ö ◊¢◊ú ◊ê◊§◊©◊®◊ï◊™ ◊ú◊ê◊õ◊ú◊ï◊° ◊û◊ô◊ô◊ì◊ô, ◊¢◊ù ◊™◊©◊ú◊ï◊ù ◊î◊ô◊™◊®◊î ◊ë◊¢◊ï◊ì ◊©◊†◊î, ◊®◊ï◊¶◊î ◊ú◊©◊û◊ï◊¢ ◊¢◊ï◊ì ◊§◊®◊ò◊ô◊ù?",
        example: {
          body_text: [["◊¢◊û◊ô◊™"]],
        },
      },
    ],
  },
};

// Configuration - Using hardcoded Meta credentials for template submission
const BUSINESS_ACCOUNT_ID = "509878158869000";
const ACCESS_TOKEN = "EAAOjW2EOihoBOZCo1ZAQkjvHP1x3LJXmJnXc0YH2UtwvqgVYZC20vWfz0Jrp3k3qGPZCI3Y1hBmOV5yI6anIJlJI0fa11i2vvRhZCRsHQMdGKZCcimH8ZBwMT0cjRMRUyEK45QiFk9equnmv6uQZC4A7P8bxYyQZB6EGlioSh7OZCkx2ZCkGWmQ9WpGNz2YRl0WArSt14T6KZAriIZCfNmsFQqmXUwDN4ZAv2Kp3OHpPfXDWA0";
const BASE_URL = "https://graph.facebook.com/v18.0";

async function submitTemplate(template) {
  console.log(`üì§ Submitting template: ${template.name}`);

  try {
    const response = await fetch(
      `${BASE_URL}/${BUSINESS_ACCOUNT_ID}/message_templates`,
      {
        method: "POST",
        headers: {
          Authorization: `Bearer ${ACCESS_TOKEN}`,
          "Content-Type": "application/json",
        },
        body: JSON.stringify(template),
      },
    );

    const result = await response.json();

    if (response.ok && result.id) {
      console.log(
        `‚úÖ SUCCESS: Template "${template.name}" submitted! ID: ${result.id}`,
      );
      return { success: true, id: result.id, name: template.name };
    } else {
      console.error(
        `‚ùå FAILED: Template "${template.name}":`,
        result.error?.message || result,
      );
      return {
        success: false,
        name: template.name,
        error: result.error?.message || "Unknown error",
      };
    }
  } catch (error) {
    console.error(
      `üí• ERROR submitting template "${template.name}":`,
      error.message,
    );
    return { success: false, name: template.name, error: error.message };
  }
}

async function submitAllTemplates() {
  console.log("üéØ WHATSAPP BUSINESS TEMPLATE SUBMISSION FOR META APP REVIEW");
  console.log("=".repeat(60));

  // Credentials are hardcoded for template submission
  console.log(`üì± Business Account ID: ${BUSINESS_ACCOUNT_ID}`);
  console.log(`üîë Access Token: ${ACCESS_TOKEN.substring(0, 20)}...`);

  console.log("üìã Templates to submit:");
  Object.values(META_SUBMISSION_TEMPLATES).forEach((template, index) => {
    console.log(`${index + 1}. ${template.name} (${template.category})`);
  });

  console.log("\nüöÄ Starting submission process...\n");

  const results = [];

  for (const template of Object.values(META_SUBMISSION_TEMPLATES)) {
    const result = await submitTemplate(template);
    results.push(result);

    // Wait 1 second between submissions to avoid rate limiting
    await new Promise((resolve) => setTimeout(resolve, 1000));
  }

  // Summary
  console.log("\nüìä SUBMISSION SUMMARY:");
  console.log("=".repeat(40));

  const successful = results.filter((r) => r.success);
  const failed = results.filter((r) => !r.success);

  console.log(`‚úÖ Successful: ${successful.length}/${results.length}`);
  console.log(`‚ùå Failed: ${failed.length}/${results.length}`);

  if (successful.length > 0) {
    console.log("\n‚úÖ SUCCESSFULLY SUBMITTED:");
    successful.forEach((result) => {
      console.log(`   - ${result.name} (ID: ${result.id})`);
    });
  }

  if (failed.length > 0) {
    console.log("\n‚ùå FAILED SUBMISSIONS:");
    failed.forEach((result) => {
      console.log(`   - ${result.name}: ${result.error}`);
    });
  }

  console.log("\nüéâ NEXT STEPS:");
  console.log("1. Check Meta Business Manager for approval status");
  console.log("2. Templates typically take 1-5 business days for approval");
  console.log("3. Once approved, you can use them in your screen recordings");
  console.log(
    "4. Approved templates will show in your WhatsApp Business dashboard",
  );

  console.log("\nüì± Check status at: https://business.facebook.com");
}

async function checkTemplateStatus() {
  console.log("üìä Checking template approval status...");

  try {
    const response = await fetch(
      `${BASE_URL}/${BUSINESS_ACCOUNT_ID}/message_templates?fields=id,name,status,category`,
      {
        headers: {
          Authorization: `Bearer ${ACCESS_TOKEN}`,
        },
      },
    );

    const result = await response.json();

    if (response.ok && result.data) {
      console.log(
        `\nüìã Found ${result.data.length} templates in your account:\n`,
      );

      result.data.forEach((template) => {
        const statusIcon =
          template.status === "APPROVED"
            ? "‚úÖ"
            : template.status === "PENDING"
              ? "‚è≥"
              : "‚ùå";
        console.log(`${statusIcon} ${template.name} (${template.status})`);
      });
    } else {
      console.error("Failed to fetch templates:", result);
    }
  } catch (error) {
    console.error("Error checking template status:", error);
  }
}

// Command line handling
const command = process.argv[2];

if (command === "status") {
  checkTemplateStatus();
} else if (command === "help") {
  console.log("WhatsApp Template Submission Tool");
  console.log("");
  console.log("Usage:");
  console.log(
    "  node scripts/submit-whatsapp-templates.js        # Submit all templates",
  );
  console.log(
    "  node scripts/submit-whatsapp-templates.js status # Check template status",
  );
  console.log(
    "  node scripts/submit-whatsapp-templates.js help   # Show this help",
  );
} else {
  submitAllTemplates();
}
